name: CI_CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: "common-blog-project"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout resources from $GITHUB_WORKSPACE
      - name: checkout resources
        uses: actions/checkout@v3

      # add secrets into properties file
      - name: add secrets into properties
        run: |
          echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode >> ./src/main/resources/application-prod.properties
          
      # setup java development kit 17
      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "corretto"

      # grant execute permission for build
      - name: grant execute permission
        run: chmod +x ./gradlew

      # build gradle project
      - name: build docker image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }} .

      # login to dockerhub
      - name: login to dockerhub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # push docker image
      - name: push docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }/${{ env.PROJECT_NAME }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      # pull new image
      - name: pull docker image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }/${{ env.PROJECT_NAME }}

      # stop old container
      - name: stop old container
        run: sudo docker stop ${{ env.PROJECT_NAME }} || true

      # remove old container
      - name: remove old container
        run: sudo docker rm ${{ env.PROJECT_NAME }} || true

      # run new container
      - name: run new container
        run: sudo docker run --name ${{ env.PROJECT_NAME }} -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}

      # remove old image
      - name: remove old image
        run: docker image prune -a -f || true
